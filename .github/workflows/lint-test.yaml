name: Lint & test package

on: [push]

# Ensures that only one workflow per branch/environment will run at a time
# on main, making correct deployment of one build after another more likely.
concurrency:
  group: ${{ github.ref == 'refs/heads/main' || github.run_id }}

jobs:
  test:
    name: Python ${{ matrix.python-version }}, Django ${{ matrix.django-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]
        django-version:
          - ">=4.1,<4.2"
          - ">=4.0,<4.1"
          - ">=3.2,<4.0"
        exclude:
          - python-version: "3.10"
            django-version: ">=3.2,<4.0"

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install

      - name: Install Django version ${{ matrix.django-version }}
        run: |
          poetry add 'Django@${{ matrix.django-version }}'

      - name: Lint with flake8
        run: |
          poetry run flake8

      - name: Check format with black
        run: |
          poetry run black --config pyproject.toml --diff --check .

      - name: Check import ordering with isort
        run: |
          poetry run isort --settings-file pyproject.toml . --check --diff

      - name: Test with pytest
        run: |
          poetry run pytest
